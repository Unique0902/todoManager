완벽한 피드백이야! 내가 놓친 부분들과 개선점들을 정확히 짚어줬어. 이걸 바탕으로 수정된 이해 내용을 정리해줄게.

---

# 📝 수정된 이해 내용

## **1. 노드 타입 및 관계 (용어 수정)**

| 타입             | 설명                                 | 자식 가능 | 마일스톤 특성 가능 | 비고/특이사항 |
|------------------|--------------------------------------|-----------|-------------------|--------------|
| goal             | **방향성/추상적 목표**, 기간 없이도 존재 가능 | O         | O                 | 트리의 중심, 하위 목표 포함 |
| project          | **구체적 실행 단위**, 기간 필수(start/end) | O         | O                 | 여러 할일/루틴/마일스톤 포함 가능 |
| milestone_group  | 마일스톤 묶음, 순서 중요              | O(마일스톤만) | O              | 자식은 is_milestone: true 자동 부여 |
| task             | 구체적 할일, 단발성                   | X         | O                 | 날짜 가능, 체크 가능 |
| other_task       | 기타 단발 일정                        | X         | X                 | 캘린더/홈에만 표시 |
| routine          | 반복 습관, **수행률**/난이도 조정 중요 | X         | X                 | 감정일기 루틴 등 |
| aspiration       | 하고 싶은 일/아이디어 저장소          | X         | X                 | 별도 페이지, 트리와 무관 |

**수정사항**: 
- "마일스톤 특성 노드" → "마일스톤 특성을 가진 노드"로 용어 통일
- goal vs project 차이점 명확화
- 루틴은 "수행률"로 통일

---

## **2. 진행률 표시 규칙 (보완)**

### **진행률 계산 대상**
- **goal, project, milestone_group**만 진행률 표시 가능
- **조건**: 자식에 루틴이 없는 경우만
- **계산 기준**: 자식 노드 중 **체크 가능한 항목들(task, project 등)** 기준
- **완료 조건**: 모든 체크 가능한 자식이 완료되어야 100%

### **루틴은 별도 지표**
- **수행률**: 전체 수행 횟수 / 예상 수행 횟수
- **연속 성공일 수**: 최근 연속 성공 기록
- **난이도 조정 횟수**: 조정 히스토리

---

## **3. 감정일기 구조 수정**

### **데이터 구조**
```sql
emotion_journals (
  id, 
  date, 
  content, 
  created_at,
  linked_routine_id (optional) -- 루틴과 연결되는 경우만
)
```

### **연결 방식**
- **주요 연결**: 홈페이지 "오늘 하루 피드백" → "감정일기 작성하러가기"
- **루틴 연결**: 선택적(감정일기 루틴의 경우)
- **독립 작성**: 루틴과 무관하게도 작성 가능

---

## **4. 트리뷰 기능 보완**

### **기본 기능**
- 피그마 스타일 드래그/확대/축소/이동
- 자식 추가만 가능, 수정/삭제는 상세페이지에서
- 각 노드 클릭 시 상세페이지 이동

### **추가 제안 기능**
- **필터**: 루틴/할일 숨기기 (복잡한 트리 시 가독성 향상)
- **노드 고정**: 자주 사용하는 goal/project 상단 고정 (즐겨찾기 기능)

---

## **5. 분석/통계 페이지 세분화**

### **프로젝트/마일스톤 중심**
- 진행률 시각화 (루틴 제외한 노드들만)
- 달성률 히스토그램
- 기간별 완료율

### **루틴 중심**
- 수행률 분석 (쉬운/적당한/어려운 루틴 분류)
- 연속 성공일 수 통계
- 난이도 조정 횟수 및 패턴
- 요일별/시간대별 수행률

### **전체 집중도**
- 요일별/주별/월별 집중도
- 활동량 히트맵

---

## **6. 데이터 구조 최종 정리**

### **공통 필드**
```sql
nodes (
  id, type, title, parent_id, 
  description, order, 
  created_at, updated_at, deleted
)
```

### **타입별 추가 필드**
```sql
-- goal/project/milestone_group
is_milestone, milestone_date, order_index,
start_date, end_date, progress

-- task/other_task  
due_date, is_milestone, order, checked

-- routine
start_date, frequency, history_log, 
difficulty_changes, performed_count, performed_dates

-- aspiration
tags, importance
```

---

## **7. 핵심 규칙 재정리**

1. **마일스톤 특성**: milestone_group의 자식으로 생성 시 자동 부여
2. **진행률**: 루틴을 자식으로 갖지 않는 goal/project/milestone_group만, 체크 가능한 자식 기준
3. **루틴**: 수행률(%)로 관리, 난이도 조정은 상세페이지에서만
4. **감정일기**: 날짜 기준, 루틴과 선택적 연결
5. **트리뷰**: 자식 추가만, 수정/삭제는 상세페이지에서
6. **캘린더**: project/milestone은 기간형 줄띠, task/other_task는 단일 날짜

---

이제 정확하게 이해했어! 이 수정된 내용을 바탕으로 다음 단계 개발을 진행하면 될 것 같아. 

다음으로는 어떤 걸 구체화해볼까?
- 데이터베이스 스키마 상세 설계
- API 엔드포인트 설계  
- 컴포넌트 구조 설계
- 개발 우선순위 및 일정 계획