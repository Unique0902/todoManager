📎 추가 설계 피드백: 커서 모델의 설계/이해 보조 목적
1. 트리 구조 관계 예시 (구조적 관계 시각화)
현재 노드 타입 간의 관계는 명확히 정의되어 있으나, 모델/개발자 기준에서 구조를 빠르게 추론하기 위한 시각적 예시 제공이 필요함. 아래 형태로 구성 예시 1~2개 삽입 권장:

csharp
복사
편집
[goal] "건강한 삶"  
  └─ [project] "12주 운동 챌린지"  
        ├─ [milestone_group] "주차별 목표"
        │     ├─ [task, is_milestone: true] "1주차 완료"
        │     └─ [task, is_milestone: true] "2주차 완료"
        └─ [task] "운동 계획 세우기"
또는:

csharp
복사
편집
[goal] "나만의 서비스 만들기"
  └─ [project] "할일 정리 앱 개발"
        ├─ [milestone_group] "개발 단계"
        │     ├─ [task, is_milestone: true] "MVP UI 완성"
        │     └─ [task, is_milestone: true] "기본 기능 구현"
        ├─ [routine] "매일 1시간 코딩"
        └─ [task] "디자인 시안 확정"
2. 루틴 vs 프로젝트 구분 요약 표 (모델 혼동 방지)
루틴과 프로젝트는 구조적으로 다르지만, 커서의 AI가 역할을 혼동하지 않도록 표 형태의 비교 요약 삽입 권장:

항목	루틴	프로젝트
성격	반복	단발적 실행
분석 지표	수행률 기반	진행률 기반
일정 기준	frequency, start_date	start_date ~ end_date
실패 기록	있음 (failed_logs)	없음

이 표는 루틴과 task/project가 동시에 자식으로 올 수 있는 경우 역할 구분을 명확히 도와줌.

3. 정책 / 구조 / UI 구분 태그 삽입 권장
기능별로 해당 항목이 정책인지(DB 규칙인지), 구조 정의인지, UI 정책인지 명시하면, 커서 모델이 혼동 없이 설계 및 제약을 따를 수 있음.

예시 태그 삽입 제안:

scss
복사
편집
✅ 트리뷰 고정 노드는 "사용자 지정 방식"만 허용     // 정책
✅ 루틴 category는 고정값 + 사용자 정의             // UI 정책
✅ emotion_journal.linked_routine_id는 nullable     // DB 구조
✅ routine의 failed_logs는 하루 1개만 기록 가능     // 정책
위와 같은 명시를 정책 문서에 삽입하면, 설계 충돌 방지, 확장 시 일관성 유지, MVP 단계를 명확히 정의하는 데 효과적임.